echo: ğŸ§© Eco de Encadenamiento Cognitivo â€“ Modo OrquestaciÃ³n
id: chaining-orchestration
mode: OrquestaciÃ³n
purpose: >-
  DiseÃ±ar y ejecutar flujos cognitivos compuestos mediante la conexiÃ³n lÃ³gica, secuencial y validable de mÃºltiples ecos existentes del sistema Echo Protocol.
  Este eco permite construir procesos complejos, integrando salidas y entradas entre ecos para lograr objetivos que no pueden alcanzarse con un Ãºnico eco aislado.

trigger: >-
  Cuando se desea resolver un problema complejo, diseÃ±ar una secuencia de pensamiento estructurada o crear un proceso modular combinando mÃºltiples ecos del sistema.

steps:
  - name: DetecciÃ³n del objetivo compuesto
    goal: >-
      Identificar quÃ© se quiere lograr que no pueda ser cubierto por un solo eco, revelando la necesidad de orquestar mÃºltiples procesos cognitivos.
    validation:
      - Â¿Se detectÃ³ un objetivo que excede el alcance de un eco individual?
      - Â¿Se enunciÃ³ claramente el resultado esperado del flujo compuesto?
    expected_output: >-
      DescripciÃ³n del objetivo general que requiere la combinaciÃ³n de mÃºltiples ecos para alcanzarlo.

  - name: SelecciÃ³n de ecos relevantes
    goal: >-
      Determinar quÃ© ecos del sistema pueden contribuir a resolver el objetivo compuesto, segÃºn su propÃ³sito y capacidades.
    validation:
      - Â¿Se listaron los ecos Ãºtiles de forma justificada?
      - Â¿Se explicÃ³ cÃ³mo cada uno aporta al objetivo general?
    expected_output: >-
      Lista de ecos seleccionados con breve justificaciÃ³n de su funciÃ³n dentro del flujo.

  - name: Ordenamiento funcional de la secuencia
    goal: >-
      Establecer el orden Ã³ptimo en que deben ejecutarse los ecos para lograr sinergia y progresiÃ³n lÃ³gica del pensamiento.
    validation:
      - Â¿El orden respeta dependencias lÃ³gicas entre pasos?
      - Â¿Se justifica la progresiÃ³n y se evita redundancia?
      - Â¿La secuencia incluye algÃºn eco que no haya sido declarado en el paso anterior? (Si la respuesta es sÃ­, esto invalida la orquestaciÃ³n)
    expected_output: >-
      Secuencia ordenada de ecos con descripciÃ³n de por quÃ© ese orden maximiza la efectividad del flujo.

  - name: ConexiÃ³n lÃ³gica entre salidas y entradas
    goal: >-
      DiseÃ±ar cÃ³mo se transfieren explÃ­citamente los resultados de un eco como inputs para el siguiente, asegurando continuidad semÃ¡ntica y estructural.
    validation:
      - Â¿Cada salida tiene una entrada compatible en el siguiente eco?
      - Â¿Se documentÃ³ claramente el traspaso de informaciÃ³n?
    expected_output: >-
      Mapa de transiciÃ³n entre ecos, indicando cÃ³mo se enlazan sus inputs/outputs.

  - name: Mecanismo de validaciÃ³n de continuidad
    goal: >-
      Establecer reglas para decidir si continuar al siguiente eco, repetir el actual o detener el flujo.
    validation:
      - Â¿Se definieron condiciones explÃ­citas de corte, repeticiÃ³n o avance?
      - Â¿El sistema puede adaptarse dinÃ¡micamente segÃºn los resultados?
    expected_output: >-
      Conjunto de condiciones de control de flujo (if/then/else cognitivo) aplicable al encadenamiento.

  - name: VisualizaciÃ³n del flujo cognitivo compuesto
    goal: >-
      Construir una representaciÃ³n visual o esquemÃ¡tica del encadenamiento, mostrando nodos (ecos) y enlaces (transiciones).
    validation:
      - Â¿Se representa claramente la estructura y el orden?
      - Â¿La visualizaciÃ³n permite auditar el flujo?
    expected_output: >-
      Diagrama o estructura tipo Ã¡rbol/secuencia que represente el flujo orquestado.

output_format: >-
  Estructura YAML con:
    - Objetivo compuesto
    - Ecos seleccionados + funciones
    - Secuencia lÃ³gica
    - Conexiones input/output
    - Reglas de continuidad
    - VisualizaciÃ³n del flujo cognitivo

notes: |-
  Este eco puede actuar como un "director de orquesta" de procesos cognitivos, permitiendo componer flujos complejos combinando mÃºltiples ecos existentes.
  Es Ãºtil para diseÃ±ar pipelines de razonamiento, flujos formativos avanzados, estrategias de resoluciÃ³n de problemas o IA estructurada (como Kael).
  Puede combinarse con:
    - ğŸ§­ Eco de Coherencia â†’ para validar si el encadenamiento sigue cumpliendo el propÃ³sito original
    - ğŸ›  Eco de DiagnÃ³stico â†’ para detectar cuellos de botella en el flujo
    - ğŸ§ª Eco de EvaluaciÃ³n â†’ para valorar la efectividad del encadenamiento diseÃ±ado
